	context=${context}-presigned
	[ -z "$GMYSQL2DB" ] && GMYSQL2DB=pdnstest2
	[ -z "$GMYSQL2USER" ] && GMYSQL2USER=root
	[ -z "$GMYSQL2HOST" ] && GMYSQL2HOST=localhost
	[ -z "$GMYSQL2PASSWD" ] && GMYSQL2PASSWD=''

	mysqladmin --user="$GMYSQL2USER" --password="$GMYSQL2PASSWD" --host="$GMYSQL2HOST" --force drop "$GMYSQL2DB" \
		|| echo ignoring mysqladmin drop failure
	mysqladmin --user="$GMYSQL2USER" --password="$GMYSQL2PASSWD" --host="$GMYSQL2HOST" create "$GMYSQL2DB"
	mysql --user="$GMYSQL2USER" --password="$GMYSQL2PASSWD" --host="$GMYSQL2HOST" \
		"$GMYSQL2DB" < ../modules/gmysqlbackend/no-dnssec.schema.mysql.sql
	mysql --user="$GMYSQL2USER" --password="$GMYSQL2PASSWD" --host="$GMYSQL2HOST" \
		"$GMYSQL2DB" < ../modules/gmysqlbackend/dnssec.schema.mysql.sql

	for zone in $(grep 'zone ' named.conf  | cut -f2 -d\" | tac)
	do
		mysql --user="$GMYSQL2USER" --password="$GMYSQL2PASSWD" --host="$GMYSQL2HOST" \
		"$GMYSQL2DB" \
		-e "INSERT INTO domains (name, type, master) VALUES('$zone','SLAVE','127.0.0.1:$port')"
	done

	set +e
	echo $skipreasons | grep -q nodnssec
	if [ $? -ne 0 ]
	then
		mysql --user="$GMYSQL2USER" --password="$GMYSQL2PASSWD" --host="$GMYSQL2HOST" "$GMYSQL2DB" \
		-e "INSERT INTO tsigkeys (name, algorithm,secret) VALUES('test', '$ALGORITHM', '$KEY')"
		mysql --user="$GMYSQL2USER" --password="$GMYSQL2PASSWD" --host="$GMYSQL2HOST" "$GMYSQL2DB" \
		-e "INSERT INTO domainmetadata (domain_id, kind, content) SELECT id, 'AXFR-MASTER-TSIG', 'test' FROM domains WHERE name = 'tsig.com'"
		echo $skipreasons | grep -q nolua
		if [ $? -ne 0 ]
		then
			mysql --user="$GMYSQL2USER" --password="$GMYSQL2PASSWD" --host="$GMYSQL2HOST" "$GMYSQL2DB" \
			-e "INSERT INTO domainmetadata (domain_id,kind,content) SELECT id,'AXFR-SOURCE','127.0.0.2' FROM domains WHERE name = 'stest.com'"
		fi
	fi
	set -e

	port=$((port+100))

	$RUNWRAPPER $PDNS2 --daemon=no --local-port=$port --socket-dir=./ \
		--no-shuffle --launch=gmysql --gmysql-dnssec \
		--send-root-referral \
		--allow-2136-from=127.0.0.0/8 --experimental-rfc2136=yes \
		--cache-ttl=$cachettl --query-cache-ttl=$cachettl --no-config --slave --retrieval-threads=4 \
		--gmysql-dbname="$GMYSQL2DB" \
		--gmysql-user="$GMYSQL2USER" \
		--gmysql-host="$GMYSQL2HOST" \
		--gmysql-password="$GMYSQL2PASSWD" \
		--config-name=gmysql2 &
	echo 'waiting for zones to be slaved'
	loopcount=0
	while [ $loopcount -lt 20 ]
	do
		sleep 5
		todo=$(mysql --user="$GMYSQL2USER" --password="$GMYSQL2PASSWD" --host="$GMYSQl2HOST" \
			"$GMYSQL2DB" -ss -e 'SELECT COUNT(id) FROM domains WHERE last_check IS NULL')
		if [ $todo = 0 ]
		then
			break
		fi
		let loopcount=loopcount+1
	done
	if [ $todo -ne 0 ]
	then
		echo "AXFR FAILED" >> failed_tests
	fi
